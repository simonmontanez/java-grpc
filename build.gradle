/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/tutorial_java_projects.html
 */

plugins {
    id 'java'
    id 'application'
    id 'com.google.protobuf' version '0.8.8'
    id 'com.palantir.docker' version '0.22.1'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

def grpcVersion = '1.21.0'
def protocVersion = '3.7.1'

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:27.0.1-jre'

    implementation "io.grpc:grpc-protobuf:${grpcVersion}"

    implementation "io.grpc:grpc-stub:${grpcVersion}"

    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { 
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" 
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
        all().each { task ->
            task.generateDescriptorSet = true
            task.descriptorSetOptions.includeSourceInfo = true
            task.descriptorSetOptions.includeImports = true
            task.descriptorSetOptions.path =
                    "${projectDir}/build/descriptors/out.pb"
        }
    }
}


// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

task unpack(type: Copy) {
    dependsOn tasks.distZip
    from(zipTree(tasks.distZip.outputs.files.singleFile))
    into("build/dependency")
}

docker {
    copySpec.from(tasks.unpack.outputs).into("./")
    name 'grpc-server:0.0.1'
}

// Define the main class for the application
mainClassName = 'co.sam.App'
